{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport function getReceipt() {\n  var jsonValue;\n  return _regeneratorRuntime.async(function getReceipt$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@Receipts4'));\n\n        case 3:\n          jsonValue = _context.sent;\n          return _context.abrupt(\"return\", jsonValue != null ? JSON.parse(jsonValue) : null);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 10:\n          console.log('Done.');\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\nexport function storeData(value) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function storeData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          jsonValue = JSON.stringify(value);\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('@Receipts4', jsonValue));\n\n        case 4:\n          _context2.next = 8;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 8:\n          console.log('Done.');\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\nexport function removeEverything() {\n  return _regeneratorRuntime.async(function removeEverything$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n        case 3:\n          _context3.next = 8;\n          break;\n\n        case 5:\n          _context3.prev = 5;\n          _context3.t0 = _context3[\"catch\"](0);\n          alert('Failed to clear the async storage.');\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n}","map":{"version":3,"sources":["/Users/emanuel/Documents/GitHub/Budget-App/BudgetApp-master/app/Storage.js"],"names":["AsyncStorage","getReceipt","getItem","jsonValue","JSON","parse","console","log","storeData","value","stringify","setItem","removeEverything","clear","alert"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AAEA,OAAO,SAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAGyBD,YAAY,CAACE,OAAb,CAAqB,YAArB,CAHzB;;AAAA;AAGOC,UAAAA,SAHP;AAAA,2CAIQA,SAAS,IAAI,IAAb,GAAoBC,IAAI,CAACC,KAAL,CAAWF,SAAX,CAApB,GAA4C,IAJpD;;AAAA;AAAA;AAAA;AAMCG,UAAAA,OAAO,CAACC,GAAR;;AAND;AASHD,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaP,OAAO,SAAeC,SAAf,CAAyBC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEON,UAAAA,SAFP,GAEmBC,IAAI,CAACM,SAAL,CAAeD,KAAf,CAFnB;AAAA;AAAA,2CAIOT,YAAY,CAACW,OAAb,CAAqB,YAArB,EAAmCR,SAAnC,CAJP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAUHG,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAVG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaP,OAAO,SAAeK,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEOZ,YAAY,CAACa,KAAb,EAFP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKCC,UAAAA,KAAK,CAAC,oCAAD,CAAL;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport async function getReceipt() {\r\n    try {\r\n\r\n        const jsonValue = await AsyncStorage.getItem('@Receipts4')\r\n        return jsonValue != null ? JSON.parse(jsonValue) : null\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n    console.log('Done.')\r\n\r\n}\r\n\r\nexport async function storeData(value) {\r\n    try {\r\n        const jsonValue = JSON.stringify(value)\r\n\r\n        await AsyncStorage.setItem('@Receipts4', jsonValue)\r\n\r\n    } catch (e) {\r\n        // save error\r\n    }\r\n\r\n    console.log('Done.')\r\n}\r\n\r\nexport async function removeEverything() {\r\n    try {\r\n        await AsyncStorage.clear()\r\n        //alert('Storage successfully cleared!')\r\n    } catch (e) {\r\n        alert('Failed to clear the async storage.')\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}